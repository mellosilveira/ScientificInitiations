<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IcVibracoes.Application</name>
    </assembly>
    <members>
        <member name="T:IcVibracoes.Controllers.FiniteElementController">
            <summary>
            This controller executes analysis using finite element concepts.
            The object is divided in elements and the mechanical properties are matricially calculated.
            </summary>
        </member>
        <member name="M:IcVibracoes.Controllers.FiniteElementController.CalculateVibration(IcVibracoes.Core.Operations.CalculateVibration.FiniteElement.Beam.Rectangular.ICalculateRectangularBeamVibration,IcVibracoes.DataContracts.FiniteElement.Beam.BeamRequest{IcVibracoes.Common.Profiles.RectangularProfile})">
            <summary>
            Calculates the vibration to a rectangular profile beam.
            </summary>
            <param name="calculateVibration">The operation responsible to calculate the vibration.</param>
            <param name="request">The request content for this operation.</param>
            <returns>A file with analysis result.</returns>
            <response code="201">Returns the newly created files.</response>
            <response code="400">If some validation do not passed.</response>
            <response code="401">If the client does not have authorization.</response>
            <response code="500">If occurred some error in process.</response>
            <response code="501">If some resource is not implemented.</response>
        </member>
        <member name="M:IcVibracoes.Controllers.FiniteElementController.CalculateVibration(IcVibracoes.Core.Operations.CalculateVibration.FiniteElement.BeamWithDva.Rectangular.ICalculateRectangularBeamWithDvaVibration,IcVibracoes.DataContracts.FiniteElement.BeamWithDynamicVibrationAbsorber.BeamWithDvaRequest{IcVibracoes.Common.Profiles.RectangularProfile})">
            <summary>
            Calculates the vibration to a rectangular profile beam with dynamic vibration absorbers.
            </summary>
            <param name="calculateVibration">The operation responsible to calculate the vibration.</param>
            <param name="request">The request content for this operation.</param>
            <returns>A file with analysis result.</returns>
            <response code="201">Returns the newly created files.</response>
            <response code="400">If some validation do not passed.</response>
            <response code="401">If the client does not have authorization.</response>
            <response code="500">If occurred some error in process.</response>
            <response code="501">If some resource is not implemented.</response>
        </member>
        <member name="M:IcVibracoes.Controllers.FiniteElementController.CalculateVibration(IcVibracoes.Core.Operations.CalculateVibration.FiniteElement.BeamWithPiezoelectric.Rectangular.ICalculateRectangularBeamWithPiezoelectricVibration,IcVibracoes.DataContracts.FiniteElement.BeamWithPiezoelectric.BeamWithPiezoelectricRequest{IcVibracoes.Common.Profiles.RectangularProfile})">
            <summary>
            Calculates the vibration to a rectangular profile beam with piezoelectrics.
            </summary>
            <param name="calculateVibration">The operation responsible to calculate the vibration.</param>
            <param name="request">The request content for this operation.</param>
            <returns>A file with analysis result.</returns>
            <response code="201">Returns the newly created files.</response>
            <response code="400">If some validation do not passed.</response>
            <response code="401">If the client does not have authorization.</response>
            <response code="500">If occurred some error in process.</response>
            <response code="501">If some resource is not implemented.</response>
        </member>
        <member name="M:IcVibracoes.Controllers.FiniteElementController.CalculateVibration(IcVibracoes.Core.Operations.CalculateVibration.FiniteElement.Beam.Circular.ICalculateCircularBeamVibration,IcVibracoes.DataContracts.FiniteElement.Beam.BeamRequest{IcVibracoes.Common.Profiles.CircularProfile})">
            <summary>
            Calculates the vibration to a circular profile beam.
            </summary>
            <param name="calculateVibration">The operation responsible to calculate the vibration.</param>
            <param name="request">The request content for this operation.</param>
            <returns>A file with analysis result.</returns>
            <response code="201">Returns the newly created files.</response>
            <response code="400">If some validation do not passed.</response>
            <response code="401">If the client does not have authorization.</response>
            <response code="500">If occurred some error in process.</response>
            <response code="501">If some resource is not implemented.</response>
        </member>
        <member name="M:IcVibracoes.Controllers.FiniteElementController.CalculateVibration(IcVibracoes.Core.Operations.CalculateVibration.FiniteElement.BeamWithDva.Circular.ICalculateCircularBeamWithDvaVibration,IcVibracoes.DataContracts.FiniteElement.BeamWithDynamicVibrationAbsorber.BeamWithDvaRequest{IcVibracoes.Common.Profiles.CircularProfile})">
            <summary>
            Calculates the vibration to a circular profile beam with dynamic vibration absorbers.
            </summary>
            <param name="calculateVibration">The operation responsible to calculate the vibration.</param>
            <param name="request">The request content for this operation.</param>
            <returns>A file with analysis result.</returns>
            <response code="201">Returns the newly created files.</response>
            <response code="400">If some validation do not passed.</response>
            <response code="401">If the client does not have authorization.</response>
            <response code="500">If occurred some error in process.</response>
            <response code="501">If some resource is not implemented.</response>
        </member>
        <member name="M:IcVibracoes.Controllers.FiniteElementController.CalculateVibration(IcVibracoes.Core.Operations.CalculateVibration.FiniteElement.BeamWithPiezoelectric.Circular.ICalculateCircularBeamWithPiezoelectricVibration,IcVibracoes.DataContracts.FiniteElement.BeamWithPiezoelectric.BeamWithPiezoelectricRequest{IcVibracoes.Common.Profiles.CircularProfile})">
            <summary>
            Calculates the vibration to a circular profile beam with piezoelectrics.
            </summary>
            <param name="calculateVibration">The operation responsible to calculate the vibration.</param>
            <param name="request">The request content for this operation.</param>
            <returns>A file with analysis result.</returns>
            <response code="201">Returns the newly created files.</response>
            <response code="400">If some validation do not passed.</response>
            <response code="401">If the client does not have authorization.</response>
            <response code="500">If occurred some error in process.</response>
            <response code="501">If some resource is not implemented.</response>
        </member>
        <member name="T:IcVibracoes.Controllers.RigidBodyController">
            <summary>
            This controller execute analysis using rigid body concepts.
            The object is considered as a unique body, using the absolut value to mass, stiffness and others mechanical properties.
            </summary>
        </member>
        <member name="M:IcVibracoes.Controllers.RigidBodyController.CalculateVibration(IcVibracoes.Core.Operations.RigidBody.CalculateVibration.OneDegreeOfFreedom.ICalculateVibrationToOneDegreeFreedom,IcVibracoes.DataContracts.RigidBody.OneDegreeOfFreedom.OneDegreeOfFreedomRequest)">
            <summary>
            Calculates the vibration of system with one degree of freedom.
            </summary>
            <param name="calculateVibration">The operation responsible to calculate the vibration.</param>
            <param name="request">The request content for this operation.</param>
            <returns>A file with analysis result.</returns>
            <response code="201">Returns the newly created files.</response>
            <response code="400">If some validation do not passed.</response>
            <response code="401">If the client does not have authorization.</response>
            <response code="500">If occurred some error in process.</response>
            <response code="501">If some resource is not implemented.</response>
        </member>
        <member name="M:IcVibracoes.Controllers.RigidBodyController.CalculateVibration(IcVibracoes.Core.Operations.RigidBody.CalculateVibration.TwoDegreesOfFreedom.ICalculateVibrationToTwoDegreesOfFreedom,IcVibracoes.DataContracts.RigidBody.TwoDegreesOfFreedom.TwoDegreesOfFreedomRequest)">
            <summary>
            Calculates the vibration of system with two degrees of freedom.
            </summary>
            <param name="calculateVibration">The operation responsible to calculate the vibration.</param>
            <param name="request">The request content for this operation.</param>
            <returns>A file with analysis result.</returns>
            <response code="201">Returns the newly created files.</response>
            <response code="400">If some validation do not passed.</response>
            <response code="401">If the client does not have authorization.</response>
            <response code="500">If occurred some error in process.</response>
            <response code="501">If some resource is not implemented.</response>
        </member>
        <member name="T:IcVibracoes.Extensions.ApplicationBuilderExtensions">
            <summary>
            It contains the extensions to the class ApplicationBuilder.
            </summary>
        </member>
        <member name="M:IcVibracoes.Extensions.ApplicationBuilderExtensions.UseSwaggerDocs(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds Swagger documentations to ApplicationBuilder.
            </summary>
            <param name="app"></param>
            <returns>The Swagger documentations.</returns>
        </member>
        <member name="T:IcVibracoes.Extensions.HttpResponseBuilder">
            <summary>
            It is responsible to build the HTTP response.
            </summary>
        </member>
        <member name="M:IcVibracoes.Extensions.HttpResponseBuilder.BuildHttpResponse``1(IcVibracoes.DataContracts.OperationResponseBase{``0})">
            <summary>
            This method builds the HTTP response .
            </summary>
            <typeparam name="TResponseData"></typeparam>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="T:IcVibracoes.Extensions.ServiceCollectionExtensions">
            <summary>
            It contains the extensions to the class ServiceCollection.
            </summary>
        </member>
        <member name="M:IcVibracoes.Extensions.ServiceCollectionExtensions.AddSwaggerDocs(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method configures the documentation file for Swagger User Interface.
            </summary>
        </member>
        <member name="T:IcVibracoes.Program">
            <summary>
            Main application class.
            </summary>
        </member>
        <member name="M:IcVibracoes.Program.Main(System.String[])">
            <summary>
            The main method of application.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:IcVibracoes.Program.CreateHostBuilder(System.String[])">
            <summary>
            The main method of application to create host builder.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:IcVibracoes.Startup">
            <summary>
            The application startup.
            It configures the dependency injection and adds all necessary configuration.
            </summary>
        </member>
        <member name="M:IcVibracoes.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:IcVibracoes.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configures the application dependencies and web hosting environment.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
